apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kaniko
  labels:
    app.kubernetes.io/version: "0.7"
  annotations:
    tekton.dev/pipelines.minVersion: "0.43.0"
    tekton.dev/categories: Image Build
    tekton.dev/tags: image-build
    tekton.dev/displayName: "Build and upload container image using Kaniko"
spec:
  params:
    - name: IMAGE
      description: Name (reference) of the image to build.
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: Dockerfile
    - name: CONTEXT
      description: The build context used by Kaniko.
      default: .
    - name: EXTRA_ARGS
      type: array
      default: []
    - name: BUILDER_IMAGE
      description: The image on which builds will run (default is v1.5.1)
      default: gcr.io/kaniko-project/executor:v1.5.1@sha256:c6166717f7fe0b7da44908c986137ecfeab21f31ec3992f6e128fff8a94be8a5
    - name: WRITER_IMAGE
      description: The image on which the write-url step will run (default is docker.io/library/bash:5.1.4@sha256:c523c636b722339f41b6a431b44588ab2f762c5de5ec3bd7964420ff982fb1d9)
      default: docker.io/library/bash:5.1.4@sha256:c523c636b722339f41b6a431b44588ab2f762c5de5ec3bd7964420ff982fb1d9
  workspaces:
    - name: output
      description: Holds the context and Dockerfile
    - name: dockerconfig
      description: Includes a docker `config.json`
        #  optional: true
        #  mountPath: /workspace/dockerconfig
  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
    - name: IMAGE_URL
      description: URL of the image just built.
  steps:
    #- name: build-and-push
    #  workingDir: $(workspaces.output.path)
    #  image: gcr.io/kaniko-project/executor:latest #$(params.BUILDER_IMAGE)
    #  volumeMounts:
    #    - name: dockerconfig
    #      mountPath: /kaniko/.docker/config.json
    #      subPath: .dockerconfigjson
    #  args:
    #    - $(params.EXTRA_ARGS)
    #      #- --context=/workspace/output
    #    - --verbosity=debug
    #    - --dockerfile=$(params.DOCKERFILE)
    #    - --context=$(workspaces.output.path)/$(params.CONTEXT)
    #      #- --docker-config=/workspace/.docker
    #    - --destination=$(params.IMAGE)
    #    - --digest-file=$(results.IMAGE_DIGEST.path)
    #  securityContext:
    #    runAsUser: 0
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:debug #$(params.WRITER_IMAGE)
      volumeMounts:
        - name: dockerconfig
          mountPath: /kaniko/.docker/config.json
          subPath: .dockerconfigjson
      script: |
        #!/busybox/sh
        cat /kaniko/.docker/config.json 
        echo "[INFO] Starting Kaniko build and push to: $(params.IMAGE)"
        /kaniko/executor \
          --dockerfile=$(params.DOCKERFILE) \
          --context=$(workspaces.output.path)/$(params.CONTEXT) \
          --destination=$(params.IMAGE) \
          --verbosity=debug
      securityContext:
        runAsUser: 0
          #script: |
          #  set -e
          #  image="$(params.IMAGE)"
          #  printf "%s" "${image}" | tee "$(results.IMAGE_URL.path)"
  volumes:
    - name: dockerconfig
      secret:
        secretName: dockerhub-creds
